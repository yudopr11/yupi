"""Change limit in Account model to DECIMAL type

Revision ID: 976d6d36ffb1
Revises: e8d1a6f84952
Create Date: 2025-03-08 18:52:02.043457

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '976d6d36ffb1'
down_revision: Union[str, None] = 'e8d1a6f84952'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Change limit column in accounts table from FLOAT to DECIMAL
    op.alter_column('accounts', 'limit',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.DECIMAL(precision=10, scale=2),
               existing_nullable=True)
    
    # Change amount column in transactions table from FLOAT to DECIMAL
    op.alter_column('transactions', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.DECIMAL(precision=10, scale=2),
               existing_nullable=False)
    
    # Add transfer_fee column to transactions table if it doesn't exist
    # First check if column exists to avoid errors
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = inspector.get_columns('transactions')
    column_names = [column['name'] for column in columns]
    
    if 'transfer_fee' not in column_names:
        op.add_column('transactions', sa.Column('transfer_fee', sa.DECIMAL(precision=10, scale=2), nullable=False, server_default='0.0'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Change amount column in transactions table back to FLOAT
    op.alter_column('transactions', 'amount',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    
    # Change limit column in accounts table back to FLOAT
    op.alter_column('accounts', 'limit',
               existing_type=sa.DECIMAL(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
    
    # Drop transfer_fee column if it was added by this migration
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    columns = inspector.get_columns('transactions')
    column_names = [column['name'] for column in columns]
    
    if 'transfer_fee' in column_names:
        op.drop_column('transactions', 'transfer_fee')
    # ### end Alembic commands ###
